Insert and print undirected and unweighted graph using adjacency list



def addNode(v):
    global nodecount
    if v in graph:
        print(v,"is already available in graph")
    else:
       graph[v]=[]
    
def show():
    for x in graph:
        print(x,":",graph[x])
def addEdge(node1,node2):
    if node1 not in graph:
        print(node1," is not available in graph")
    if node2 not in graph:
        print(node2," is not available in graph")
    else:
        graph[node1].append(node2)
        graph[node2].append(node1)

graph={}
while True:
    print()
    print("1.addNode\n2.addEdge\n3.show\n4.exit")
    ch=int(input("enter your choice"))
    if ch==1:
        v=input("enter node")
        addNode(v)
    elif ch==2:
        node1=input("enter first node")
        node2=input("enter second node")
        addEdge(node1,node2)
    elif ch==3:
        show()
    elif ch==4:
        break
    else:
        print("invalid choice")
     



1.addNode
2.addEdge
3.show
4.exit
enter your choice1
enter nodeA
1.addNode
2.addEdge
3.show
4.exit
enter your choice1
enter nodeB
1.addNode
2.addEdge
3.show
4.exit
enter your choice1
enter nodeC
1.addNode
2.addEdge
3.show
4.exit
enter your choice1
enter nodeD
1.addNode
2.addEdge
3.show
4.exit
enter your choice3
A : []
B : []
C : []
D : []

1.addNode
2.addEdge
3.show
4.exit
enter your choice2
enter first nodeA
enter second nodeB
1.addNode
2.addEdge
3.show
4.exit
enter your choice3
A : ['B']
B : ['A']
C : []
D : []

1.addNode
2.addEdge
3.show
4.exit
enter your choice2
enter first nodeC
enter second nodeA
1.addNode
2.addEdge
3.show
4.exit
enter your choice3
A : ['B', 'C']
B : ['A']
C : ['A']
D : []
